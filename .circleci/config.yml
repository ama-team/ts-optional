parameters:
  jabba:
    version: &jabba_version 0.9.2
    cache_key: &jabba_cache_key v1-jabba-0.9.2
  java:
    version: &java_version zulu@1.9.0
  yarn:
    cache_key: &yarn_cache_key v1-yarn-{{ checksum "package.json" }}
  docker:
    image: &docker_image circleci/node:9
version: 2
workflows:
  version: 2
  default:
    jobs:
      - build: {}
      - publish:
          context: npm
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
jobs:
  build:
    docker:
      - image: *docker_image
    working_directory: /tmp/workspace
    environment:
      JABBA_VERSION: *jabba_version
      JAVA_VERSION: *java_version
    steps:
      - checkout
      - restore_cache:
          key: *jabba_cache_key
      - run:
          name: 'Setup: Jabba & Java Installation'
          command: |
            set -euxo pipefail
            sudo ln -sf ~/.jabba/bin/jabba /usr/local/bin/jabba
            [ ! -d ~/.jabba ] || exit 0
            curl -sL https://github.com/shyiko/jabba/raw/master/install.sh | bash && . ~/.jabba/jabba.sh
            jabba install $JAVA_VERSION
      - save_cache:
          key: *jabba_cache_key
          paths:
            - ~/.jabba
      - restore_cache:
          key: *yarn_cache_key
      - run:
          name: 'Setup: Dependency Installation'
          command: yarn
      - save_cache:
          key: *yarn_cache_key
          paths:
            - node_modules
      - run:
          name: Lint
          command: npx tslint --project .
          when: always
      - run:
          name: Compilation
          command: npm run compile
      - run:
          name: Test
          command: npm run test
      - run:
          name: Coverage Publication
          command: 'npm run coverage:publish'
      - run:
          name: Report
          command: |
            export JAVA_HOME="$(jabba which $JAVA_VERSION)"
            npm run report
      - store_artifacts:
          path: dist
          when: always
      - store_artifacts:
          path: report
          when: always
      - store_test_results:
          path: report
          when: always
  publish:
    docker:
      - image: *docker_image
    working_directory: /tmp/workspace
    steps:
      - checkout
      - restore_cache:
          key: *yarn_cache_key
      - run:
          name: 'Setup: Dependency Installation'
          command: yarn
      - save_cache:
          key: *yarn_cache_key
          paths:
            - node_modules
      - run:
          name: Lint
          command: npx tslint --project .
          when: always
      - run:
          name: Compilation
          command: yarn run compile
      - run:
          name: Publishing
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            npm publish --access public

